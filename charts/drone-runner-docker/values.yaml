# Default values for drone-runner-docker.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Mapping between IP and hostnames that will be injected as entries in the pod's hosts files
# https://kubernetes.io/docs/tasks/network/customize-hosts-file-for-pods/
hostAliases: []
# - ip: 10.20.30.40
#   hostnames:
#   - gitea-127.0.0.1.sslip.io
replicaCount: 1

## The official drone docker runner image, change tag to use a different version.
## ref: https://hub.docker.com/r/drone/drone-runner-docker/tags/
##
image:
  repository: drone/drone-runner-docker
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 1.8.1

## If you'd like to make additional files or volumes available to the runner, declare additional
## Volumes here per the Pod spec's "volumes" section of the dind container
## Ref: https://kubernetes.io/docs/concepts/storage/volumes/
##
extraVolumes:
  - name: storage
    emptyDir: {}
## If you have declared extra volumes, mount them here, per the Pod Container's
## "volumeMounts" section.
##
extraVolumeMounts: []

## Values used only for dind container
dind:
  ## The official docker (dind) image, change tag to use a different version.
  ## ref: https://hub.docker.com/r/library/docker/tags/
  ##
  repository: docker
  tag: 20-dind
  pullPolicy: IfNotPresent
  command:
    - "dockerd"
  commandArgs:
    - "--host"
    - "tcp://localhost:2375"
  securityContext:
    privileged: true
  ## If you have declared extra volumes, mount them here, per the Pod Container's
  ## "volumeMounts" section of dind container
  ##
  extraVolumeMounts:
    - name: storage
      mountPath: /var/lib/docker
      subPath: docker

imagePullSecrets: []

## When the runner receives a SIGTERM/SIGINT (config update, upgrade, etc), it will wait until
## all jobs that particular pod has spawned complete. It is for this reason that you'll want
## to make sure that this value is longer than your longest job.
terminationGracePeriodSeconds: 3600

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

## If you'd like to provide your own Kubernetes Secret object instead of passing your values
## in un-encrypted, pass in the name of a created + populated Secret in the same Namespace
## as the Docker runner. All secrets within this configmap will be mounted as environment
## variables, with each key/value mapping to a corresponding environment variable on the
## Docker runner.
##
extraSecretNamesForEnvFrom: []
# - my-drone-secrets

## The keys within the "env" map are mounted as environment variables on the Kubernetes runner pod.
## See the full reference of Kubernetes runner environment variables here:
## Ref: https://docs.drone.io/runner/docker/configuration/reference/
##
env:
  ## The docker host to be used by the drone-runner-docker when connecting
  ## to the docker daemon, defaults to the dind(sidecar) docker daemon
  DOCKER_HOST: "tcp://localhost:2375"
  ## REQUIRED: Set the secret secret token that the Docker runner will use
  ## to authenticate. This is commented out in order to leave you the ability to set the
  ## key via a separately provisioned secret (see extraSecretNamesForEnvFrom above).
  ## Ref: https://docs.drone.io/runner/docker/configuration/reference/drone-rpc-secret/
  ##
  # DRONE_RPC_SECRET:

  ## The hostname/IP (and optionally the port) for your Kubernetes runner. Defaults to the "drone"
  ## service that the drone server Chart creates by default.
  ## Ref: https://docs.drone.io/runner/docker/configuration/reference/drone-rpc-host/
  ##
  DRONE_RPC_HOST: drone

  ## The protocol to use for communication with Drone server.
  ## Ref: https://docs.drone.io/runner/docker/configuration/reference/drone-rpc-proto/
  ##
  DRONE_RPC_PROTO: http
