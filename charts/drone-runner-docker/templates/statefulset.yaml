{{- if eq .Values.kind "StatefulSet" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "drone-runner-docker.fullname" . }}
  labels:
    {{- include "drone-runner-docker.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  serviceName: {{ include "drone-runner-docker.fullname" . }}
  selector:
    matchLabels:
      {{- include "drone-runner-docker.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "drone-runner-docker.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "drone-runner-docker.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if  not .Values.persistance.enabled }}
      volumes:
        - name: {{ include "drone-runner-docker.fullname" . }}-cache
          emptyDir: {}
      {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- else }}
      {{- with .Values.extraVolumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      containers:
        - name: dind
          image: "{{ .Values.dind.registry }}/{{ .Values.dind.repository }}:{{ .Values.dind.tag }}"
          imagePullPolicy: {{ .Values.dind.pullPolicy }}
          command: 
          {{- range .Values.dind.command }}
            - {{ . }}
          {{- end }}
          args:
          {{- range .Values.dind.commandArgs }}
            - {{ . }}
          {{- end }}
          {{- with .Values.dind.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          lifecycle:
            preStop:
              # wait for all running containers to have stopped, so the last build can finish before the runner is fully stopped.
              exec:
                command: ["/bin/sh","-c","while true; do sleep {{ .Values.dind.gracefulShutdownRetryPeriod }}; lastEventTime=$(docker -H tcp://localhost:2375 events --since={{ .Values.dind.gracefulShutdownRetryPeriod }}s --until=1s | wc -l); containersRunning=$(docker -H tcp://localhost:2375 ps -q | wc -l); if [ $containersRunning -eq 0 ]  && [ $lastEventTime -eq 0 ]; then exit 0; fi; echo 'steps/containers running, retry'; done"]
          livenessProbe:
            exec:
              command:
              - docker
              - -H 
              - tcp://localhost:2375
              - images
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            exec:
              command:
              - docker
              - -H 
              - tcp://localhost:2375
              - images
            initialDelaySeconds: 5
            periodSeconds: 5
          {{- with .Values.dind.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: {{ include "drone-runner-docker.fullname" . }}-cache
              mountPath: /var/lib/docker
              subPath: docker
          {{- with .Values.dind.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- if $.Values.gc.enabled }}
        - name: gc
          image: "{{ .Values.gc.registry }}/{{ .Values.gc.repository }}:{{ .Values.gc.tag }}"
          imagePullPolicy: {{ .Values.gc.pullPolicy }}
          {{- with .Values.gc.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: DOCKER_HOST
              value: {{ .Values.env.DOCKER_HOST }}
          {{- if $.Values.gc.env }}
            {{- range $key, $value := $.Values.gc.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- end }}
          {{- with .Values.gc.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "drone-runner-docker.fullname" . }}
          {{- range .Values.extraSecretNamesForEnvFrom }}
            - secretRef:
                name: {{ . }}
          {{- end }}
          {{- with .Values.extraVolumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: DOCKER_HOST
              value: {{ .Values.env.DOCKER_HOST }}
            - name: DRONE_RUNNER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: tcp
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: tcp
          readinessProbe:
            tcpSocket:
              port: tcp
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
  {{- if .Values.persistance.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: {{ include "drone-runner-docker.fullname" . }}-cache
    spec:
      accessModes: [ {{ .Values.persistance.accessMode }} ]
      storageClassName: {{ .Values.persistance.storageClass }}
      resources:
        requests:
          storage: {{ .Values.persistance.size }}
  {{- end }}
{{- end }}