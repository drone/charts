apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "drone-runner-docker.fullname" . }}
  labels:
    {{- include "drone-runner-docker.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "drone-runner-docker.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "drone-runner-docker.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "drone-runner-docker.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: storage
          emptyDir: {}
      containers:
        - name: dind
          image: "{{ .Values.dind.repository }}:{{ .Values.dind.tag }}"
          imagePullPolicy: {{ .Values.dind.pullPolicy }}
          command: ["dockerd", "--host", "tcp://127.0.0.1:2375"]
          securityContext:
            privileged: true
          volumeMounts:
            - name: storage
              mountPath: /var/lib/docker
              subPath: docker
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "drone-runner-docker.fullname" . }}
          {{- range .Values.extraSecretNamesForEnvFrom }}
            - secretRef:
                name: {{ . }}
          {{- end }}
          env:
            # TODO: allow DOCKER_HOST AND DRONE_RUNNER_NAME to be overridden
            - name: DOCKER_HOST
              value: tcp://localhost:2375
            - name: DRONE_RUNNER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: tcp
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: tcp
          readinessProbe:
            tcpSocket:
              port: tcp
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
